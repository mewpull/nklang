stmts = { stmt } ;

stmt = if_stmt
     | while_stmt
     | "return" [ expr ] ";"
     | [ expr ] ";"
     ;

if_stmt = "if" expr "{" stmts "}" [ if_stmt_else ] ;
if_stmt_else = "else" (if_stmt | "{" stmts "}") ;

while_stmt = "while" expr "{" stmts "}" ;

expr = if_expr
     | function
     | l_or
     ;

if_expr = "if" expr "{" expr "}" [ if_expr_else ] ;
if_expr_else = "else" (if_expr | "{" expr "}") ;

function = "(" ID { "," ID } ")" "=>" "{" stmts "}" ;

l_or = l_and { "||" l_and } ;

l_and = comp { "&&" comp } ;

comp = term [ ("==" | ">" | ">=" | "<" | "<=") term ] ;

term = addend { ("+" | "-") addend } ;

addend = factor { ("*" | "/") factor } ;

factor = "(" expr ")" [ call ]
       | ID [ declaration | assignment | call ]
       | NUM
       | STR
       ;

declaration = ":=" expr ;

assignment = "=" expr ;

call = "(" [ expr { "," expr } ] ")" ;
